{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Projects\\\\React\\\\pokedex\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Projects\\\\React\\\\pokedex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Projects\\\\React\\\\pokedex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Projects\\\\React\\\\pokedex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Projects\\\\React\\\\pokedex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Projects\\\\React\\\\pokedex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Projects\\\\React\\\\pokedex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Projects\\\\React\\\\pokedex\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TopNavbar from './Components/TopNavbar';\nimport BottomNavbar from './Components/BottomNavbar';\nimport Team from './Components/Team';\n/**\n * Classe che disegna tutta la pagina e gestisce l'applicazione\n */\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    /**\n     * @param {Object[]} pokemonList - Lista di pokemon\n     * @param {Object[]} pokemonSpeciesList - Altra lista di pokemon con informazioni differenti\n     * @param {Object[]} selectedPokemons - Lista di 6 elementi che contiene i pokemon selezionati dall'utente (di default sono tutti a null)\n     * @param {number}  selectedIndex - Indice che viene incrementato e decrementato per scorrere nel pokedex\n     */\n\n    _this.getPokemonList =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(pokemons) {\n        var promises, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                promises = []; //Lista di promesse\n                //Per ogni pokemon esegue una fetch per prendere i dati\n\n                pokemons.forEach(function (p) {\n                  promises.push(fetch(\"https://pokeapi.co/api/v2/pokemon/\" + p.pokemon_species.name + \"/\").then(function (p) {\n                    return p.json();\n                  }));\n                });\n                _context.next = 4;\n                return Promise.all(promises);\n\n              case 4:\n                result = _context.sent;\n                return _context.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getPokemonSpeciesList =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(pokemons) {\n        var promises, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                promises = []; //Lista di promesse\n                //Per ogni pokemon esegue una fetch per prendere i dati\n\n                pokemons.forEach(function (p) {\n                  promises.push(fetch(p.pokemon_species.url).then(function (p) {\n                    return p.json();\n                  }));\n                });\n                _context2.next = 4;\n                return Promise.all(promises);\n\n              case 4:\n                result = _context2.sent;\n                return _context2.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.searchPokemon = function (name) {\n      var pokemonList = _this.state.pokemonList; //Lista di pokemon\n      //Scorre tutta la lista di pokemon\n\n      for (var i = 0; i < pokemonList.length; i++) {\n        //Se trova il pokemon specificato aggiorna lo stato modificando l'indice che \"punta\" al pokemon all'interno della lista\n        if (pokemonList[i].name.toLowerCase().localeCompare(name.toLowerCase()) === 0) {\n          _this.setState({\n            selectedIndex: i\n          });\n        }\n      }\n    };\n\n    _this.changePokemon = function (direction) {\n      //Impedisce che si scorra la lista troppo velocemente\n      if (_this.pressed) return;\n      var selectedIndex = _this.state.selectedIndex; //Indice \"puntatore\"\n      //Impedisce che il \"puntatore\" esca dai margini della lista\n\n      if (selectedIndex + direction > _this.state.pokemonList.length - 1 || selectedIndex + direction < 0) return; //Cambia lo stato con il nuovo indice\n\n      _this.setState({\n        selectedIndex: selectedIndex + direction\n      });\n\n      _this.pressed = true;\n      setTimeout(function () {\n        return _this.pressed = false;\n      }, 300); //Timeout che per 300 millisecondi impedisce di cambiare pokemon\n    };\n\n    _this.handleKeyDown = function (event) {\n      if (event.keyCode === 40) _this.changePokemon(1);\n      if (event.keyCode === 38) _this.changePokemon(-1);\n    };\n\n    _this.getRightDescription = function (language) {\n      var rightIndex = 1; //Indice che specifica in quale posizione della lista di lingue si trova quella selezionata\n\n      var p = _this.state.pokemonSpeciesList[_this.state.selectedIndex]; //Pokemon selezionato\n      //Scorre la lista di lingue fino a trovare quella giusta per poi salvare in quale posizione si trova\n\n      for (var i = 0; i < p.flavor_text_entries.length; i++) {\n        if (p.flavor_text_entries[i].language.name.localeCompare(language) === 0) rightIndex = i;\n      }\n\n      return p.flavor_text_entries[rightIndex].flavor_text;\n    };\n\n    _this.addPokemon = function () {\n      var name = _this.state.pokemonList[_this.state.selectedIndex].name; //Nome del pokemon selezionato\n\n      var image = _this.state.pokemonList[_this.state.selectedIndex].sprites.front_default; //Sprite del pokemon selezionato\n      //Oggetto pokemon nel quale sono specificati il suo nome e la sua sprite\n\n      var pokemon = {\n        name: name,\n        image: image\n      };\n      var selectedPokemons = _this.state.selectedPokemons; //Lista di pokemon scelti dall'utente\n      //Scorre tutta la lista di pokemon scelti dall'utente per mettere in coda quello selezionato al momento dell'aggiunta\n\n      for (var i = 0; i < selectedPokemons.length; i++) {\n        if (selectedPokemons[i] === null) {\n          selectedPokemons[i] = pokemon;\n          break;\n        }\n      } //Aggiorna la lista di pokemon scelti dall'utente\n\n\n      _this.setState({\n        selectedPokemons: selectedPokemons\n      });\n    };\n\n    _this.deletePokemon = function (index) {\n      var selectedPokemons = _this.state.selectedPokemons; //Lista di pokemon scelti dall'utente\n\n      selectedPokemons[index] = null; //Elimina il pokemon dalla lista\n\n      selectedPokemons.sort(function (a, b) {\n        return a === null && b === null || a !== null && b !== null ? 0 : a === null ? 1 : -1;\n      }); //Ordina la lista mettendo in coda i null\n      //Aggiorna la lista di pokemon scelti dall'utente\n\n      _this.setState({\n        selectedPokemons: selectedPokemons\n      });\n    };\n\n    _this.state = {\n      pokemonList: [],\n      pokemonSpeciesList: [],\n      selectedPokemons: [null, null, null, null, null, null],\n      selectedIndex: 0\n    };\n    _this.pressed = false; //Booleano usato per gestire il timer che impedisce all'utente di scorrere le pagine del pokedex in maniera troppo rapida\n\n    return _this;\n  }\n  /**\n   * Prende i dati relativi ai pokemon\n   * @param {Object[]} pokemons - Lista che contiene i nomi dei pokemon necessari per fare la richiesta al server\n   * \n   * @returns {Object[]} Lista di pokemon\n   */\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n\n    /**\n     * Chiamata automaticamente non appena il componente viene \"montato\" sulla pagina\n     * Viene eseguito subito dopo il render\n     */\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //Aggiunge alla pagina un listener che richiama la funzione passata come parametro ogni volta che viene premuto un pulsante della tastiera\n      document.addEventListener(\"keydown\", this.handleKeyDown.bind(this)); //Richiesta al server per \"ottenere\" il pokedex\n\n      fetch(\"https://pokeapi.co/api/v2/pokedex/kanto/\").then(function (result) {\n        return result.json();\n      }).then(function (pokedex) {\n        var pokemons = pokedex.pokemon_entries; //Lista di pokemon dove sono indicati solo il nome e un url per accedere ad altri dati\n        //Ottiene la lista di dati relativi ai pokemon...\n\n        _this2.getPokemonList(pokemons).then(function (a) {\n          //...e aggiorna lo stato con la lista piena\n          _this2.setState({\n            pokemonList: a\n          });\n        }); //Ottiene la lista di dati relativi ai pokemon...\n\n\n        _this2.getPokemonSpeciesList(pokemons).then(function (a) {\n          //...e aggiorna lo stato con la lista piena\n          _this2.setState({\n            pokemonSpeciesList: a\n          });\n        });\n      });\n    }\n    /**\n     * Disegna la pagina\n     * Viene eseguita ogni volta che lo stato è aggiornato ridisegnando la pagina e i componenti\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.pokemonList.length <= 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"BOYYY\");\n      var types = this.state.pokemonList[this.state.selectedIndex].types.map(function (item, index) {\n        return React.createElement(\"div\", {\n          className: \"pure-u-1-2 type \" + item.type.name,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"type\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, item.type.name));\n      });\n      var rightDescription = this.getRightDescription(\"en\");\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(TopNavbar, {\n        search: this.searchPokemon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"pure-g divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pure-u-2-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"pure-u-3-5 center-element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"triangle-up\",\n        src: \"https://cdn.shopify.com/s/files/1/0253/8243/products/Mildmay_Grey_Rubber_Triangle_Tiles_large.png?v=1522237355\",\n        onClick: function onClick() {\n          return _this3.changePokemon(-1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"pure-g body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pure-u-1-2 center-element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.pokemonList[this.state.selectedIndex].sprites.front_default,\n        className: \"pokemon-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        class: \"far fa-plus-square add-button\",\n        onClick: this.addPokemon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"pure-u-1-2 eskeuro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pure-g\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pure-u-1-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"info-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"#\" + (this.state.selectedIndex + 1) + \" \" + this.state.pokemonList[this.state.selectedIndex].name.toUpperCase()), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, this.state.pokemonSpeciesList[this.state.selectedIndex].shape.name.charAt(0).toUpperCase() + this.state.pokemonSpeciesList[this.state.selectedIndex].shape.name.slice(1) + \" pokemon\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, types)), React.createElement(\"div\", {\n        className: \"pure-u-1-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Team, {\n        selectedPokemons: this.state.selectedPokemons,\n        onDelete: this.deletePokemon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, rightDescription)))), React.createElement(\"div\", {\n        className: \"pure-g divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pure-u-2-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"pure-u-3-5 center-element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"triangle-down\",\n        src: \"https://cdn.shopify.com/s/files/1/0253/8243/products/Mildmay_Grey_Rubber_Triangle_Tiles_large.png?v=1522237355\",\n        onClick: function onClick() {\n          return _this3.changePokemon(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }))), React.createElement(BottomNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\gabri\\Desktop\\Projects\\React\\pokedex\\src\\App.js"],"names":["React","Component","TopNavbar","BottomNavbar","Team","App","getPokemonList","pokemons","promises","forEach","p","push","fetch","pokemon_species","name","then","json","Promise","all","result","getPokemonSpeciesList","url","searchPokemon","pokemonList","state","i","length","toLowerCase","localeCompare","setState","selectedIndex","changePokemon","direction","pressed","setTimeout","handleKeyDown","event","keyCode","getRightDescription","language","rightIndex","pokemonSpeciesList","flavor_text_entries","flavor_text","addPokemon","image","sprites","front_default","pokemon","selectedPokemons","deletePokemon","index","sort","a","b","document","addEventListener","bind","pokedex","pokemon_entries","types","map","item","type","rightDescription","toUpperCase","shape","charAt","slice"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA;;;;IAGMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AAEA;;;;;;;AAHY,UA0BdC,cA1Bc;AAAA;AAAA;AAAA;AAAA;AAAA,+BA0BG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,gBAAAA,QADW,GACA,EADA,EACK;AAEpB;;AACAD,gBAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAC,CAAC,EAAI;AACpBF,kBAAAA,QAAQ,CAACG,IAAT,CACEC,KAAK,CAAC,uCAAuCF,CAAC,CAACG,eAAF,CAAkBC,IAAzD,GAAgE,GAAjE,CAAL,CACGC,IADH,CACQ,UAAAL,CAAC;AAAA,2BAAIA,CAAC,CAACM,IAAF,EAAJ;AAAA,mBADT,CADF;AAID,iBALD;AAJe;AAAA,uBAWMC,OAAO,CAACC,GAAR,CAAYV,QAAZ,CAXN;;AAAA;AAWTW,gBAAAA,MAXS;AAAA,iDAYRA,MAZQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA1BH;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAgDdC,qBAhDc;AAAA;AAAA;AAAA;AAAA;AAAA,+BAgDU,kBAAOb,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,gBAAAA,QADkB,GACP,EADO,EACF;AAEpB;;AACAD,gBAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAC,CAAC,EAAI;AACpBF,kBAAAA,QAAQ,CAACG,IAAT,CACEC,KAAK,CAACF,CAAC,CAACG,eAAF,CAAkBQ,GAAnB,CAAL,CACGN,IADH,CACQ,UAAAL,CAAC;AAAA,2BAAIA,CAAC,CAACM,IAAF,EAAJ;AAAA,mBADT,CADF;AAID,iBALD;AAJsB;AAAA,uBAWDC,OAAO,CAACC,GAAR,CAAYV,QAAZ,CAXC;;AAAA;AAWhBW,gBAAAA,MAXgB;AAAA,kDAYfA,MAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAhDV;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAoEdG,aApEc,GAoEE,UAAAR,IAAI,EAAI;AAAA,UACjBS,WADiB,GACF,MAAKC,KADH,CACjBD,WADiB,EACU;AAEhC;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,WAAW,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C;AACA,YAAGF,WAAW,CAACE,CAAD,CAAX,CAAeX,IAAf,CAAoBa,WAApB,GAAkCC,aAAlC,CAAgDd,IAAI,CAACa,WAAL,EAAhD,MAAwE,CAA3E,EAA8E;AAC5E,gBAAKE,QAAL,CAAc;AACZC,YAAAA,aAAa,EAAEL;AADH,WAAd;AAGD;AACF;AACF,KAhFa;;AAAA,UAuFdM,aAvFc,GAuFE,UAAAC,SAAS,EAAI;AAC3B;AACA,UAAG,MAAKC,OAAR,EACE;AAHyB,UAKtBH,aALsB,GAKL,MAAKN,KALA,CAKtBM,aALsB,EAKO;AAElC;;AACA,UAAGA,aAAa,GAAGE,SAAhB,GAA4B,MAAKR,KAAL,CAAWD,WAAX,CAAuBG,MAAvB,GAAgC,CAA5D,IAAiEI,aAAa,GAAGE,SAAhB,GAA4B,CAAhG,EACE,OATyB,CAW3B;;AACA,YAAKH,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEA,aAAa,GAAGE;AADnB,OAAd;;AAIA,YAAKC,OAAL,GAAe,IAAf;AACAC,MAAAA,UAAU,CAAC;AAAA,eAAM,MAAKD,OAAL,GAAe,KAArB;AAAA,OAAD,EAA6B,GAA7B,CAAV,CAjB2B,CAiBmB;AAC/C,KAzGa;;AAAA,UAgHdE,aAhHc,GAgHE,UAAAC,KAAK,EAAI;AACvB,UAAGA,KAAK,CAACC,OAAN,KAAkB,EAArB,EACE,MAAKN,aAAL,CAAmB,CAAnB;AAEF,UAAGK,KAAK,CAACC,OAAN,KAAkB,EAArB,EACE,MAAKN,aAAL,CAAmB,CAAC,CAApB;AACH,KAtHa;;AAAA,UA+HdO,mBA/Hc,GA+HQ,UAAAC,QAAQ,EAAI;AAChC,UAAIC,UAAU,GAAG,CAAjB,CADgC,CACZ;;AACpB,UAAI9B,CAAC,GAAG,MAAKc,KAAL,CAAWiB,kBAAX,CAA8B,MAAKjB,KAAL,CAAWM,aAAzC,CAAR,CAFgC,CAEkC;AAElE;;AACA,WAAI,IAAIL,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGf,CAAC,CAACgC,mBAAF,CAAsBhB,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;AACpD,YAAGf,CAAC,CAACgC,mBAAF,CAAsBjB,CAAtB,EAAyBc,QAAzB,CAAkCzB,IAAlC,CAAuCc,aAAvC,CAAqDW,QAArD,MAAmE,CAAtE,EACEC,UAAU,GAAGf,CAAb;AACH;;AAED,aAAOf,CAAC,CAACgC,mBAAF,CAAsBF,UAAtB,EAAkCG,WAAzC;AACD,KA1Ia;;AAAA,UAgJdC,UAhJc,GAgJD,YAAM;AACjB,UAAM9B,IAAI,GAAG,MAAKU,KAAL,CAAWD,WAAX,CAAuB,MAAKC,KAAL,CAAWM,aAAlC,EAAiDhB,IAA9D,CADiB,CACmD;;AACpE,UAAM+B,KAAK,GAAG,MAAKrB,KAAL,CAAWD,WAAX,CAAuB,MAAKC,KAAL,CAAWM,aAAlC,EAAiDgB,OAAjD,CAAyDC,aAAvE,CAFiB,CAEqE;AAEtF;;AACA,UAAMC,OAAO,GAAG;AACdlC,QAAAA,IAAI,EAAJA,IADc;AAEd+B,QAAAA,KAAK,EAALA;AAFc,OAAhB;AALiB,UAUZI,gBAVY,GAUQ,MAAKzB,KAVb,CAUZyB,gBAVY,EAUqB;AAEtC;;AACA,WAAI,IAAIxB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGwB,gBAAgB,CAACvB,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,YAAGwB,gBAAgB,CAACxB,CAAD,CAAhB,KAAwB,IAA3B,EAAiC;AAC/BwB,UAAAA,gBAAgB,CAACxB,CAAD,CAAhB,GAAsBuB,OAAtB;AACA;AACD;AACF,OAlBgB,CAoBjB;;;AACA,YAAKnB,QAAL,CAAc;AACZoB,QAAAA,gBAAgB,EAAEA;AADN,OAAd;AAGD,KAxKa;;AAAA,UA+KdC,aA/Kc,GA+KE,UAAAC,KAAK,EAAI;AAAA,UAChBF,gBADgB,GACI,MAAKzB,KADT,CAChByB,gBADgB,EACiB;;AACxCA,MAAAA,gBAAgB,CAACE,KAAD,CAAhB,GAA0B,IAA1B,CAFuB,CAES;;AAChCF,MAAAA,gBAAgB,CAACG,IAAjB,CAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAYD,CAAC,KAAK,IAAN,IAAcC,CAAC,KAAK,IAArB,IAA+BD,CAAC,KAAK,IAAN,IAAcC,CAAC,KAAK,IAApD,GAA6D,CAA7D,GAAkED,CAAC,KAAK,IAAP,GAAe,CAAf,GAAmB,CAAC,CAA/F;AAAA,OAAtB,EAHuB,CAGmG;AAE1H;;AACA,YAAKxB,QAAL,CAAc;AACZoB,QAAAA,gBAAgB,EAAEA;AADN,OAAd;AAGD,KAxLa;;AASZ,UAAKzB,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAE,EADF;AAEXkB,MAAAA,kBAAkB,EAAE,EAFT;AAGXQ,MAAAA,gBAAgB,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAHP;AAIXnB,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAOA,UAAKG,OAAL,GAAe,KAAf,CAhBY,CAgBU;;AAhBV;AAiBb;AAGD;;;;;;;;;;;AAuKA;;;;wCAIoB;AAAA;;AAClB;AACAsB,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKrB,aAAL,CAAmBsB,IAAnB,CAAwB,IAAxB,CAArC,EAFkB,CAIlB;;AACA7C,MAAAA,KAAK,CAAC,0CAAD,CAAL,CACCG,IADD,CACM,UAAAI,MAAM;AAAA,eAAIA,MAAM,CAACH,IAAP,EAAJ;AAAA,OADZ,EAGCD,IAHD,CAGM,UAAA2C,OAAO,EAAI;AACb,YAAInD,QAAQ,GAAGmD,OAAO,CAACC,eAAvB,CADa,CAC2B;AAExC;;AACA,QAAA,MAAI,CAACrD,cAAL,CAAoBC,QAApB,EACGQ,IADH,CACQ,UAAAsC,CAAC,EAAI;AACT;AACA,UAAA,MAAI,CAACxB,QAAL,CAAc;AACZN,YAAAA,WAAW,EAAE8B;AADD,WAAd;AAGD,SANH,EAJa,CAYb;;;AACA,QAAA,MAAI,CAACjC,qBAAL,CAA2Bb,QAA3B,EACCQ,IADD,CACM,UAAAsC,CAAC,EAAI;AACT;AACA,UAAA,MAAI,CAACxB,QAAL,CAAc;AACZY,YAAAA,kBAAkB,EAAEY;AADR,WAAd;AAGD,SAND;AAOH,OAvBD;AAwBD;AAGD;;;;;;;6BAIS;AAAA;;AACP,UAAG,KAAK7B,KAAL,CAAWD,WAAX,CAAuBG,MAAvB,IAAiC,CAApC,EACE,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAR;AAEF,UAAMkC,KAAK,GAAG,KAAKpC,KAAL,CAAWD,WAAX,CAAuB,KAAKC,KAAL,CAAWM,aAAlC,EAAiD8B,KAAjD,CAAuDC,GAAvD,CAA2D,UAACC,IAAD,EAAOX,KAAP,EAAiB;AACxF,eACE;AAAK,UAAA,SAAS,EAAE,qBAAqBW,IAAI,CAACC,IAAL,CAAUjD,IAA/C;AAAqD,UAAA,GAAG,EAAEqC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBW,IAAI,CAACC,IAAL,CAAUjD,IAA/B,CADF,CADF;AAKD,OANa,CAAd;AAQA,UAAIkD,gBAAgB,GAAG,KAAK1B,mBAAL,CAAyB,IAAzB,CAAvB;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,SAAD;AAAW,QAAA,MAAM,EAAE,KAAKhB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAIE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAC,gHAAjC;AAAkJ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACS,aAAL,CAAmB,CAAC,CAApB,CAAN;AAAA,SAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CAJF,EAWE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWD,WAAX,CAAuB,KAAKC,KAAL,CAAWM,aAAlC,EAAiDgB,OAAjD,CAAyDC,aAAnE;AAAkF,QAAA,SAAS,EAAC,eAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAG,QAAA,KAAK,EAAC,+BAAT;AAAyC,QAAA,OAAO,EAAE,KAAKH,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAFF,EAQE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,OAAO,KAAKpB,KAAL,CAAWM,aAAX,GAA2B,CAAlC,IAAuC,GAAvC,GAA6C,KAAKN,KAAL,CAAWD,WAAX,CAAuB,KAAKC,KAAL,CAAWM,aAAlC,EAAiDhB,IAAjD,CAAsDmD,WAAtD,EADhD,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKzC,KAAL,CAAWiB,kBAAX,CAA8B,KAAKjB,KAAL,CAAWM,aAAzC,EAAwDoC,KAAxD,CAA8DpD,IAA9D,CAAmEqD,MAAnE,CAA0E,CAA1E,EAA6EF,WAA7E,KAA6F,KAAKzC,KAAL,CAAWiB,kBAAX,CAA8B,KAAKjB,KAAL,CAAWM,aAAzC,EAAwDoC,KAAxD,CAA8DpD,IAA9D,CAAmEsD,KAAnE,CAAyE,CAAzE,CAA7F,GAA2K,UAAhL,CALF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMR,KAAN,CAPF,CADF,EAUE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAE,KAAKpC,KAAL,CAAWyB,gBAAnC;AAAqD,QAAA,QAAQ,EAAE,KAAKC,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,CAFF,EAiBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4Bc,gBAA5B,CADF,CAjBF,CARF,CAXF,EA2CE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,GAAG,EAAC,gHAAnC;AAAoJ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACjC,aAAL,CAAmB,CAAnB,CAAN;AAAA,SAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CA3CF,EAkDE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlDF,CADF;AAuDD;;;;EAzSe9B,S;;AA4SlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport TopNavbar from './Components/TopNavbar';\nimport BottomNavbar from './Components/BottomNavbar';\n\nimport Team from './Components/Team';\n\n/**\n * Classe che disegna tutta la pagina e gestisce l'applicazione\n */\nclass App extends Component {\n  constructor() {\n    super();\n\n    /**\n     * @param {Object[]} pokemonList - Lista di pokemon\n     * @param {Object[]} pokemonSpeciesList - Altra lista di pokemon con informazioni differenti\n     * @param {Object[]} selectedPokemons - Lista di 6 elementi che contiene i pokemon selezionati dall'utente (di default sono tutti a null)\n     * @param {number}  selectedIndex - Indice che viene incrementato e decrementato per scorrere nel pokedex\n     */\n    this.state = {\n      pokemonList: [],\n      pokemonSpeciesList: [],\n      selectedPokemons: [null, null, null, null, null, null],\n      selectedIndex: 0\n    }\n\n    this.pressed = false; //Booleano usato per gestire il timer che impedisce all'utente di scorrere le pagine del pokedex in maniera troppo rapida\n  }\n\n\n  /**\n   * Prende i dati relativi ai pokemon\n   * @param {Object[]} pokemons - Lista che contiene i nomi dei pokemon necessari per fare la richiesta al server\n   * \n   * @returns {Object[]} Lista di pokemon\n   */\n  getPokemonList = async (pokemons) => {\n    let promises = [];  //Lista di promesse\n\n    //Per ogni pokemon esegue una fetch per prendere i dati\n    pokemons.forEach(p => {\n      promises.push(\n        fetch(\"https://pokeapi.co/api/v2/pokemon/\" + p.pokemon_species.name + \"/\")\n          .then(p => p.json())\n        );\n    });\n\n    const result = await Promise.all(promises); //Risolve le promise (si attende che tutte le richieste siano soddisfatte prima di ritornare i risultati) e salva i risultati in una variabile\n    return result;\n  }\n\n\n  /**\n   * Prende alcuni dati relativi ai pokemon\n   * @param {Object[]} pokemons - Lista contentente gli url usati per fare la richiesta\n   * \n   * @returns {Object[]} Lista di pokemon\n   */\n  getPokemonSpeciesList = async (pokemons) => {\n    let promises = [];  //Lista di promesse\n\n    //Per ogni pokemon esegue una fetch per prendere i dati\n    pokemons.forEach(p => {\n      promises.push(\n        fetch(p.pokemon_species.url)\n          .then(p => p.json())\n        );\n    });\n\n    const result = await Promise.all(promises); //Risolve le promise (si attende che tutte le richieste siano soddisfatte prima di ritornare i risultati) e salva i risultati in una variabile\n    return result;\n  }\n\n\n  /**\n   * Cerca il pokemon in base al nome e mostra le sue informazioni a schermo aggiornando lo stato dell'applicaizone\n   * @param {string} name - Nome del pokemon da cercare\n   */\n  searchPokemon = name => {\n    let {pokemonList} = this.state; //Lista di pokemon\n\n    //Scorre tutta la lista di pokemon\n    for(let i = 0; i < pokemonList.length; i++) {\n      //Se trova il pokemon specificato aggiorna lo stato modificando l'indice che \"punta\" al pokemon all'interno della lista\n      if(pokemonList[i].name.toLowerCase().localeCompare(name.toLowerCase()) === 0) {\n        this.setState({\n          selectedIndex: i\n        });\n      }\n    }\n  }\n\n\n  /**\n   * Scorre il pokedex (lista di pokemon)\n   * @param {number} direction - Indica in quale direzione scorrere la lista(+1 va avanti, -1 torna indietro)\n   */\n  changePokemon = direction => {\n    //Impedisce che si scorra la lista troppo velocemente\n    if(this.pressed)\n      return;\n\n    let {selectedIndex} = this.state; //Indice \"puntatore\"\n\n    //Impedisce che il \"puntatore\" esca dai margini della lista\n    if(selectedIndex + direction > this.state.pokemonList.length - 1 || selectedIndex + direction < 0)\n      return;\n\n    //Cambia lo stato con il nuovo indice\n    this.setState({\n      selectedIndex: selectedIndex + direction\n    });\n\n    this.pressed = true;\n    setTimeout(() => this.pressed = false, 300);  //Timeout che per 300 millisecondi impedisce di cambiare pokemon\n  }\n\n\n  /**\n   * Controlla quale tasto è stato premuto per scorrere la lista di pokemon\n   * @param {Object} event - Informazioni relative all'evento scatenato dalla pressione di un tasto\n   */\n  handleKeyDown = event => {\n    if(event.keyCode === 40)\n      this.changePokemon(1);\n    \n    if(event.keyCode === 38)\n      this.changePokemon(-1);\n  }\n\n\n  /**\n   * Trova la descrizione giusta in base alla lingua selezionata\n   * @param {string} language - Lingua che deve essere la descrizione\n   * \n   * @returns {string} Descrizione del pokemon\n   */\n  getRightDescription = language => {\n    let rightIndex = 1; //Indice che specifica in quale posizione della lista di lingue si trova quella selezionata\n    let p = this.state.pokemonSpeciesList[this.state.selectedIndex];  //Pokemon selezionato\n\n    //Scorre la lista di lingue fino a trovare quella giusta per poi salvare in quale posizione si trova\n    for(let i = 0; i < p.flavor_text_entries.length; i++) {\n      if(p.flavor_text_entries[i].language.name.localeCompare(language) === 0)\n        rightIndex = i;\n    } \n\n    return p.flavor_text_entries[rightIndex].flavor_text;\n  }\n\n\n  /**\n   * Aggiunge il pokemon al momento selezionato alla lista di pokemon scelti dall'utente\n   */\n  addPokemon = () => {\n    const name = this.state.pokemonList[this.state.selectedIndex].name; //Nome del pokemon selezionato\n    const image = this.state.pokemonList[this.state.selectedIndex].sprites.front_default; //Sprite del pokemon selezionato\n\n    //Oggetto pokemon nel quale sono specificati il suo nome e la sua sprite\n    const pokemon = {\n      name,\n      image\n    };\n\n    let {selectedPokemons} = this.state;  //Lista di pokemon scelti dall'utente\n\n    //Scorre tutta la lista di pokemon scelti dall'utente per mettere in coda quello selezionato al momento dell'aggiunta\n    for(let i = 0; i < selectedPokemons.length; i++) {\n      if(selectedPokemons[i] === null) {\n        selectedPokemons[i] = pokemon;\n        break;\n      }\n    }\n\n    //Aggiorna la lista di pokemon scelti dall'utente\n    this.setState({\n      selectedPokemons: selectedPokemons\n    });\n  }\n\n\n  /**\n   * Elimina un pokemon dalla lista di pokemon scelti dall'utente\n   * @param {number} index - Indice che indica in quale posizione della lista si trova il pokemon da eliminare\n   */\n  deletePokemon = index => {\n    const {selectedPokemons} = this.state;  //Lista di pokemon scelti dall'utente\n    selectedPokemons[index] = null; //Elimina il pokemon dalla lista\n    selectedPokemons.sort((a, b) => ((a === null && b === null) || (a !== null && b !== null)) ? 0 : (a === null) ? 1 : -1);  //Ordina la lista mettendo in coda i null\n\n    //Aggiorna la lista di pokemon scelti dall'utente\n    this.setState({\n      selectedPokemons: selectedPokemons\n    });\n  }\n\n\n  /**\n   * Chiamata automaticamente non appena il componente viene \"montato\" sulla pagina\n   * Viene eseguito subito dopo il render\n   */\n  componentDidMount() {\n    //Aggiunge alla pagina un listener che richiama la funzione passata come parametro ogni volta che viene premuto un pulsante della tastiera\n    document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n\n    //Richiesta al server per \"ottenere\" il pokedex\n    fetch(\"https://pokeapi.co/api/v2/pokedex/kanto/\")\n    .then(result => result.json())\n\n    .then(pokedex => {\n        let pokemons = pokedex.pokemon_entries; //Lista di pokemon dove sono indicati solo il nome e un url per accedere ad altri dati\n\n        //Ottiene la lista di dati relativi ai pokemon...\n        this.getPokemonList(pokemons)\n          .then(a => {\n            //...e aggiorna lo stato con la lista piena\n            this.setState({\n              pokemonList: a\n            });\n          });\n\n        //Ottiene la lista di dati relativi ai pokemon...\n        this.getPokemonSpeciesList(pokemons)\n        .then(a => {\n          //...e aggiorna lo stato con la lista piena\n          this.setState({\n            pokemonSpeciesList: a\n          });\n        });\n    });\n  }\n\n\n  /**\n   * Disegna la pagina\n   * Viene eseguita ogni volta che lo stato è aggiornato ridisegnando la pagina e i componenti\n   */\n  render() {\n    if(this.state.pokemonList.length <= 0)\n      return (<p>BOYYY</p>);\n\n    const types = this.state.pokemonList[this.state.selectedIndex].types.map((item, index) => {\n      return(\n        <div className={\"pure-u-1-2 type \" + item.type.name} key={index}>\n          <p className=\"type\">{item.type.name}</p>\n        </div>\n      )\n    });\n\n    let rightDescription = this.getRightDescription(\"en\");\n\n    return (\n      <div className=\"container\">\n        \n        <TopNavbar search={this.searchPokemon}/>\n\n        <div className=\"pure-g divider\">\n          <div className=\"pure-u-2-5\" />\n          <div className=\"pure-u-3-5 center-element\">\n            <img className=\"triangle-up\" src=\"https://cdn.shopify.com/s/files/1/0253/8243/products/Mildmay_Grey_Rubber_Triangle_Tiles_large.png?v=1522237355\" onClick={() => this.changePokemon(-1)} />\n          </div>\n        </div>\n\n        <div className=\"pure-g body\">\n\n          <div className=\"pure-u-1-2 center-element\">\n            <img src={this.state.pokemonList[this.state.selectedIndex].sprites.front_default} className=\"pokemon-image\"/>\n            <br />\n            <i class=\"far fa-plus-square add-button\" onClick={this.addPokemon} />\n          </div>\n          \n          <div className=\"pure-u-1-2 eskeuro\">\n\n            <div className=\"pure-g\">\n              <div className=\"pure-u-1-2\">\n                <h1 className=\"info-container\">\n                  {\"#\" + (this.state.selectedIndex + 1) + \" \" + this.state.pokemonList[this.state.selectedIndex].name.toUpperCase()}\n                </h1>\n\n                <h1>{this.state.pokemonSpeciesList[this.state.selectedIndex].shape.name.charAt(0).toUpperCase() + this.state.pokemonSpeciesList[this.state.selectedIndex].shape.name.slice(1) + \" pokemon\"}</h1>\n              \n                <div>{types}</div>\n              </div>\n              <div className=\"pure-u-1-2\">\n                <Team selectedPokemons={this.state.selectedPokemons} onDelete={this.deletePokemon}/>\n              </div>\n            </div>\n\n            <div className=\"description\">\n              <p className=\"description\">{rightDescription}</p>\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"pure-g divider\">\n          <div className=\"pure-u-2-5\" />\n          <div className=\"pure-u-3-5 center-element\">\n            <img className=\"triangle-down\" src=\"https://cdn.shopify.com/s/files/1/0253/8243/products/Mildmay_Grey_Rubber_Triangle_Tiles_large.png?v=1522237355\" onClick={() => this.changePokemon(1)} />\n          </div>\n        </div>\n\n        <BottomNavbar />\n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}